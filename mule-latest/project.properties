# Ant and Maven properties for building the Mule project


# Mule related properties
mule.title=Mule
mule.name=mule
mule.dir=${basedir}/../mule
mule.lib.dir=${mule.dir}/lib


# Project name
project.name=mule
 

# Library directory within project. Where third party jars reside.
lib.dir=${basedir}/lib

# Source directory under the current root
main.src.dir=${basedir}/src/main/java

# Resource directory under the current root
main.src.resources.dir=${basedir}/src/main/resources

# Test directory under the current root
main.test.dir=${basedir}/src/test/java

# Test resources directory under the current root
main.test.resources.dir=${basedir}/src/test/resources

# With the exception of 'dist' and 'docs/api', all artifacts produced by
# the build go somewhere underneath the target dir
target.dir=${basedir}/target

# Main source tree will be compiled into this directory tree
target.classes.dir=${target.dir}/classes

# Test tree will be compiled into this directory tree
target.testclasses.dir=${target.dir}/test-classes

# Wildcards to be matched by JUnit tests.
# Convention is that our JUnit test classes have XXXTests-style names.
test.includes=**/*Tests.class,**/*Test.class

# Wildcards to exclude among JUnit tests.
test.excludes=**/Abstract*,**/PersistentQueueTests.class,**/PersistentSedaTests.class  

# JUnit settings
junit.forkmode=perTest

# Directory where JUnit test reports are written
target.junit.reports.dir=${target.dir}/test-reports

# Directory where JUnit test summary is written
target.junit.summary.dir=${target.dir}/test-summary

target.javadoc.dir=${basedir}/docs

dist.dir=${basedir}/dist

debug=on

gigaspaces.dir.mule=${basedir}/../../gigaspaces
openspaces.dir.mule=${basedir}/../../openspaces